plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'cat.itacademy.s04.t02.n01'
version = '0.0.1-SNAPSHOT'
description = 'S04T02N01GuillemMarc'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
    // Para Jakarta Servlets (aplicaciones web)
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    // Para Jakarta Persistence (JPA) - ORM y gestión de entidades
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // Para validación de datos (Bean Validation)
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // Para APIs de anotaciones
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	/*implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'*/
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
	useJUnitPlatform()
}
